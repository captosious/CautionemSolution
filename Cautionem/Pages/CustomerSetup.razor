@page "/CustomerSetup"
@using Cautionem.Models
@using System.Linq

@inject IStringLocalizer<Components.Customer> Localizer

@inject Cautionem.Data.CustomerService customerService
@inject Cautionem.Data.CustomerContactService customerContactService

    <div class="row">
        <div class="col">
            <h1>@Localizer["configcustomer"]</h1>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <CustomerSearch OnCustomerSelected=@OnCustomerSelected />
        </div>
    </div>
    @if (ShowDetail)
    {
        <CascadingValue Value=parCustomer>
            <CustomerDetail />
            <CustomerContacts />
        </CascadingValue>
    }
    @code{
        protected Models.Customer parCustomer = new Models.Customer();

        //Modal Customer Edit
        private Modal modalWindowEdit;
        private bool IsNew = false;
        private bool ShowDetail = false;
        private string modalTitle;
        protected IEnumerable<Cautionem.Models.CustomerContact> customersContacts = new List<Cautionem.Models.CustomerContact>();

        protected override async Task OnInitializedAsync()
        {
            //modalWindowEdit.Hide();
            ShowDetail = false;
        }

        private async void OnCustomerSelected(Models.Customer customer)
        {
            ShowDetail = true;
            parCustomer = customer;
            //customersContacts = await customerContactService.GetAll(parCustomer);
        }

        private async void Delete()
        {

        }

        // Modal
        private void CloseModal()
        {
            modalWindowEdit.Hide();
        }

        private void OpenModal()
        {
            modalWindowEdit.Show();
        }

        private void OnClosing(CancelEventArgs e)
        {
            StateHasChanged();
        }

    }
