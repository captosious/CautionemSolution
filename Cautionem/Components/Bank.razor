@page "/Bank"
@using Cautionem.Models
@using Blazorise

@inject Cautionem.Data.BankService bankService
@inject IStringLocalizer<Bank> Localizer

    <div>
        <h2>@Localizer["banks"]</h2>
        @{
            <Table Narrow="true" Hoverable="true">
                <TableHeader Class="tableselection_style">
                    <TableRow>
                        <TableHeaderCell>@Localizer["bankname"]</TableHeaderCell>
                        <TableHeaderCell>@Localizer["bankdescription"]</TableHeaderCell>
                        <TableHeaderCell>@Localizer["bankaccount"]</TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    @foreach (Cautionem.Models.Bank bankloop in banks)
                    {
                        <TableRow role="button" @onclick="@(() => BankEdit(bankloop))">
                            <TableRowCell>@bankloop.Name</TableRowCell>
                            <TableRowCell>@bankloop.Description</TableRowCell>
                            <TableRowCell>@bankloop.Account</TableRowCell>
                        </TableRow>
                    }
                </TableBody>
            </Table>
        }
    <Modal @ref="modalBank" Closing="@OnClosing">
        <ModalBackdrop />
        <ModalContent Size="ModalSize.Default" Centered="true">
            <ModalHeader>
                <i class="fas fa-edit fa-2x"></i>
                <ModalTitle>@Localizer["banksedition"]</ModalTitle>
                <CloseButton Clicked="@CloseModal" />
            </ModalHeader>
            <ModalBody>
                <div>
                    <Addons>
                        <Addon AddonType="AddonType.Start">
                            <AddonLabel Class="addonlabel_style">@Localizer["bankname"]</AddonLabel>
                        </Addon>
                        <Addon AddonType="AddonType.Body">
                            <TextEdit @bind-Text="@bankEdit.Name" />
                        </Addon>
                    </Addons>
                </div>
                <div>
                    <Addons>
                        <Addon AddonType="AddonType.Start">
                            <AddonLabel Class="addonlabel_style">@Localizer["bankdescription"]</AddonLabel>
                        </Addon>
                        <Addon AddonType="AddonType.Body">
                            <TextEdit @bind-Text="@bankEdit.Description" />
                        </Addon>
                    </Addons>
                </div>
                <div>
                    <Addons>
                        <Addon AddonType="AddonType.Start">
                            <AddonLabel Class="addonlabel_style">@Localizer["bankaccount"]</AddonLabel>
                        </Addon>
                        <Addon AddonType="AddonType.Body">
                            <TextEdit @bind-Text="@bankEdit.Account" />
                        </Addon>
                    </Addons>
                </div>
            </ModalBody>
            <ModalFooter>
                <button class="btn btn_general btn-success" @onclick="Save">@SharedLocalizer["MSG_SAVE"]</button>
            </ModalFooter>
        </ModalContent>
    </Modal>
    </div>
    <div class="d-flex justify-content-center">
        <button class="btn btn_general btn-success" @onclick="Add">@SharedLocalizer["MSG_ADD"]</button>
    </div>

    @code{
        private Cautionem.Models.Bank bankEdit = new Cautionem.Models.Bank();
        private IEnumerable<Cautionem.Models.Bank> banks = new List<Cautionem.Models.Bank>();
        //Modal
        private Modal modalBank;
        private bool IsNew = false;

        protected override async Task OnInitializedAsync()
        {
            await GetAllRecords();
        }

        private async Task GetAllRecords()
        {
            this.banks = await bankService.GetAll(1);
        }

        private void BankEdit(Cautionem.Models.Bank bank)
        {
            this.bankEdit = bank;
            modalBank.Show();
        }

        private void Add()
        {
            IsNew = true;
            bankEdit = new Models.Bank();
            bankEdit.CompanyId = 1;
            OpenModal();
        }

        private async void Save()
        {
            if (IsNew)
            {
                await bankService.Add(bankEdit);
            }
            else
            {
                await bankService.Save(bankEdit);
            }
            CloseModal();
        }

        // Modal
        private void CloseModal()
        {
            modalBank.Hide();
        }

        private void OpenModal()
        {
            modalBank.Show();
        }

        private void OnClosing(CancelEventArgs e)
        {
            bankService.Detach(bankEdit);
            e.Cancel = false;
            IsNew = false;
            StateHasChanged();
        }
    }
