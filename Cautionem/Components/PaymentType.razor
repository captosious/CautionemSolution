@page "/PaymentType"
@using Cautionem.Models
@inject Cautionem.Data.PaymentTypeService paymentTypeService
@inject IStringLocalizer<PaymentType> Localizer

<div>
    <h1>@Localizer["paymenttypes"]</h1>
        <Table Narrow="true" Hoverable="true" Striped="false" ThemeContrast="ThemeContrast.Light">
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>@Localizer["paymenttypename"]</TableHeaderCell>
                    <TableHeaderCell>@Localizer["paymenttypeterms"]</TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TableBody>
                @foreach (Cautionem.Models.PaymentType paymentTypeloop in paymentTypes)
                {
                    <TableRow role="button" @onclick="@(() => PaymentEdit(paymentTypeloop))">
                        <TableRowCell>@paymentTypeloop.Name</TableRowCell>
                        <TableRowCell>@paymentTypeloop.Terms</TableRowCell>
                    </TableRow>
                }
            </TableBody>
        </Table>
</div>
<div>
    <div class="row">
        <Addons>
            <Addon AddonType="AddonType.Start">
                <AddonLabel Style="width:100px">@Localizer["paymenttypename"]</AddonLabel>
            </Addon>
            <Addon AddonType="AddonType.Body">
                <TextEdit @bind-Text="@paymentType.Name" />

            </Addon>
        </Addons>
    </div>
    <div class="row">
        <Addons>
            <Addon AddonType="AddonType.Start">
                <AddonLabel Style="width:100px">@Localizer["paymenttypeterms"]</AddonLabel>
            </Addon>
            <Addon AddonType="AddonType.Body">
                <TextEdit @bind-Text="@paymentType.Terms" />
            </Addon>
        </Addons>
    </div>
</div>
<br />
<div class="d-flex justify-content-center">
    <button class="btn btn_general btn-success" @onclick="Save">@SharedLocalizer["MSG_EDIT"]</button>
</div>


@code{
    private Cautionem.Models.PaymentType paymentType = new Cautionem.Models.PaymentType();
    private IEnumerable<Cautionem.Models.PaymentType> paymentTypes = new List<Cautionem.Models.PaymentType>();

    protected override async Task OnInitializedAsync()
    {
        this.paymentTypes = await paymentTypeService.GetAll(1);
    }

    private void PaymentEdit(Cautionem.Models.PaymentType paymentType)
    {
        this.paymentType = paymentType;
    }

    private async void Save()
    {
        await paymentTypeService.Save(this.paymentType);
    }
}
