@page "/PaymentType"
@using Cautionem.Models
@inject Cautionem.Data.PaymentTypeService paymentTypeService
@inject IStringLocalizer<PaymentType> Localizer

<div>
    <h1>@Localizer["paymenttypes"]</h1>
    @{
        <table class="table table-hover table-condensed table-list-general table-sm">
            <thead>
                <tr>
                    <th>@Localizer["paymenttypename"]</th>
                    <th>@Localizer["paymenttypeterms"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (Cautionem.Models.PaymentType paymentTypeloop in paymentTypes)
                {
                    <tr class="" role="button" @onclick="@(() => BankEdit(paymentTypeloop))">
                        <td>@paymentTypeloop.Name</td>
                        <td>@paymentTypeloop.Terms</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
<div>
    <div class="row">
        <div class="col-4">@Localizer["paymenttypename"]</div>
        <div class="col-8"><input type="text" @bind="@paymentType.Name" /></div>
    </div>
    <div class="row">
        <div class="col-4">@Localizer["paymenttypeterms"]</div>
        <div class="col-8"><input type="text" @bind="@paymentType.Terms" /></div>
    </div>
</div>

<button class="btn btn_general btn-success" @onclick="Save">@SharedLocalizer["MSG_EDIT"]</button>

@code{
    private Cautionem.Models.PaymentType paymentType = new Cautionem.Models.PaymentType();
    private IEnumerable<Cautionem.Models.PaymentType> paymentTypes = new List<Cautionem.Models.PaymentType>();

    protected override async Task OnInitializedAsync()
    {
        this.paymentTypes = await paymentTypeService.GetAll(1);
    }

    private void BankEdit(Cautionem.Models.PaymentType paymentType)
    {
        this.paymentType = paymentType;
    }

    private async void Save()
    {
        await paymentTypeService.Save(this.paymentType);
    }
}
