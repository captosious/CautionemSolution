@page "/CustomerContacts"
@using Cautionem.Models
@using System.Linq

@inject Cautionem.Data.CustomerContactService customerContactService
@inject IStringLocalizer<Customer> Localizer

<div>
    <h2>@Localizer["customercontacts"]</h2>
    <DataGrid TItem="Cautionem.Models.CustomerContact" Data="@customersContacts" @bind-SelectedRow="@customerContactEdit" RowClicked="@RowClicking" Editable="false" Filterable="true" Sortable="true" ShowPager="true" PageSize="10" Narrow="true" Hoverable="true">
        <DataGridCommandColumn TItem="Cautionem.Models.Customer" />

        <DataGridColumn TItem="Cautionem.Models.CustomerContact" Field="@nameof(Cautionem.Models.CustomerContact.Id)" Caption="@Localizer["fiscalid"]" TextAlignment="TextAlignment.Left" />
        <DataGridColumn TItem="Cautionem.Models.CustomerContact" Field="@nameof(Cautionem.Models.CustomerContact.Name)" Caption="@Localizer["name"]" TextAlignment="TextAlignment.Justified" />
        <DataGridColumn TItem="Cautionem.Models.CustomerContact" Field="@nameof(Cautionem.Models.CustomerContact.Address)" Caption="@Localizer["address"]" TextAlignment="TextAlignment.Justified" />
        <DataGridColumn TItem="Cautionem.Models.CustomerContact" Field="@nameof(Cautionem.Models.CustomerContact.Town)" Caption="@Localizer["town"]" TextAlignment="TextAlignment.Justified" />
        <DataGridColumn TItem="Cautionem.Models.CustomerContact" Field="@nameof(Cautionem.Models.CustomerContact.Zip)" Caption="@Localizer["zip"]" TextAlignment="TextAlignment.Left" />
    </DataGrid>
</div>

@code{
    [Parameter]
    public Models.Customer parCustomer { get; set; }

    private Cautionem.Models.CustomerContact customerContactEdit = new Cautionem.Models.CustomerContact();
    private IEnumerable<Cautionem.Models.CustomerContact> customersContacts = new List<Cautionem.Models.CustomerContact>();

    //Modal
    private Modal modalCustomer;
    private bool IsNew = false;
    private bool ShowDetail = false;

    protected override async Task OnInitializedAsync()
    {
        myBlocker.Show();
        customersContacts = await customerContactService.Get(parCustomer);
        myBlocker.Hide();
    }

    private void Edit(Cautionem.Models.CustomerContact customerContact)
    {
        this.customerContactEdit = customerContact;
        modalCustomer.Show();
    }

    private async void Save()
    {
        myBlocker.Show();
        await customerContactService.Save(customerContactEdit);
        myBlocker.Hide();
    }

    // Modal Contacts
    private void CloseModal()
    {
        modalCustomer.Hide();
    }

    private void OpenModal()
    {
        modalCustomer.Show();
    }

    private void OnClosing(CancelEventArgs e)
    {
        customerContactService.Detach(customerContactEdit);
        e.Cancel = false;
        IsNew = false;
        StateHasChanged();
    }

    async Task OnReadData(DataGridReadDataEventArgs<Cautionem.Models.Customer> e)
    {
        customers = await customerService.GetAll(1);
        StateHasChanged();
    }

    protected void RowClicking()
    {
        //modalCustomer.Show();
        ShowDetail = true;
        StateHasChanged();
    }
}
